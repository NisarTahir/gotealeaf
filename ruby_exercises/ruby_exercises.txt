Note: we're looking for Ruby commands for the below questions, not the actual answers, unless it's a question. 

Hint: you can type "irb" in your terminal to get a Ruby console to test things out. For multi-line code, use an editor that can run Ruby code, or copy/paste into irb.

Hint 2: you can refer to the Ruby doc for Array and Hash here: 

http://www.ruby-doc.org/core-1.9.3/Array.html
http://www.ruby-doc.org/core-1.9.3/Hash.html


1. Use the "each" method of Array to iterate over [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], and print out each value.

	numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	numbers.each do |x|
	p x
	end


2. Same as above, but only print out values greater than 5.

	numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
	numbers.each do |x|
	p x if x > 5 
	end

3. Now, using the same array from #2, use the "select" method to extract all odd numbers into a new array.

	odd_numbers_array = []
	numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

	odd_numbers = numbers.select {|x| x % 2 != 0} #select odd nos
	odd_numbers.each do |x|
	  p x
	  odd_numbers_array.push x#create a new array of the odd nos
	end

	p odd_numbers_array

4. Append "11" to the end of the array. Prepend "0" to the beginning.

	numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

	numbers.push 11

	p numbers.last

	numbers.unshift 0

	p numbers.first

	p numbers

5. Get rid of "11". And append a "3".

	numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

	numbers.push 11 # add 11 to the end of the array

	p numbers.last # show the last no

	numbers.unshift 0 # add zero to the start of the array

	p numbers.first # show the first no in the array

	p numbers

	numbers.pop # remove the last no

	p numbers

	numbers.push 3

	p numbers


6. Get rid of duplicates without specifically removing any one value. 

	p numbers.uniq #Only shows unqiue elements in the array

7. What's the major difference between an Array and a Hash?

	Hashes can use key/Values pairs, arrays store values only

8. Create a Hash using both Ruby 1.8 and 1.9 syntax.

Suppose you have a h = {a:1, b:2, c:3, d:4}

	h = {'a' => 1, 'b'  => 2, 'c' => 3, 'd' => 4}  #<-1.8
	h = {a:1, b:2, c:3, d:4} #<-1.9

9. Get the value of key "b".

	h = {a:1, b:2, 'b' => 2, c:3, d:4}
	p h[:b]
	p h['b']

10. Add to this hash the key:value pair {e:5}

h = {a:1, b:2, 'b' => 2, c:3, d:4}
p h[:b]
p h['b']
#h['e'] = 5
h[:e] = 5
p  h
p h[:e]

11. Remove all key:value pairs whose value is less than 3.5

	h = {a:1, b:2, c:3, d:4}
	h[:e] = 5

	h.delete_if { |key, value| value < 3.5 }

	p h

12. Can hash values be arrays? Can you have an array of hashes? (give examples)

13. Look at several Rails/Ruby online API sources and say which one your like best and why.


